name: create kernel initrd and squashfs and publish it to github releases

on:
  push:
    branches: [ master ]

jobs:
       
  archive-build-artifacts:
    runs-on: ubuntu-latest
    steps:

      - name: Add live-build to ubuntu image
        run: |
          sudo add-apt-repository -y ppa:live-build/ppa
          sudo apt-get -q update
          sudo apt-get -y install live-build debian-archive-keyring debian-keyring
        
      - name: step 2 - Add artifacts to publish to the temp folder
        run: |
          export DIR=/srv/live-build-rescue-`date +"%Y%m%d%H%M%S"`
          sudo mkdir -p $DIR /var/www/html
          echo $DIR
          cd $DIR
          pwd
          sudo lb config -d bullseye --debootstrap-options "--exclude=nano,iptables,dmidecode,info" --apt-source-archives false --cache false --chroot-filesystem squashfs --apt-indices false --cache-packages false --config https://github.com/gratuxri/live-build-rescue.git::master --archive-areas "main contrib non-free" --apt-recommends false --firmware-chroot false --firmware-binary false --updates true --backports false --win32-loader false --loadlin false --security true  --initsystem systemd  -b netboot -a amd64 -k amd64 --linux-packages linux-image --bootappend-live vconsole.keymap=de-latin1-nodeadkeys log_buf_len=1M quickreboot silent splash lang=de locales=de_DE.UTF-8 keyboard-layouts=de consoleblank=0 quiet kernel.sysrq=1 keep_bootcon sysrq_always_enabled toram live-config live-config.timezone=Europe/Berlin
          sudo lb build
          cd `dirname $DIR`
          sudo ln -nfs `basename $DIR` lb-rescue
          cd /var/www/html
          sudo ln -nfs /srv/lb-rescue/tftpboot/live/initrd.img .
          sudo ln -nfs /srv/lb-rescue/tftpboot/live/vmlinuz .
          sudo ln -nfs /srv/lb-rescue/binary/live/filesystem.squashfs .
    
      - name: Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: /var/www/html
